<%
/*
<!--

    Copyright (C) 2003-2007 eXo Platform SAS.

    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU Affero General Public License
    as published by the Free Software Foundation; either version 3
    of the License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, see<http://www.gnu.org/licenses/>.

-->
*/
%>
<%
  import org.exoplatform.portal.mop.user.UserNavigation;
  import org.exoplatform.portal.mop.user.UserNode;
  import org.exoplatform.portal.webui.util.Util;
  import org.exoplatform.portal.mop.Visibility;
  import org.exoplatform.webui.organization.OrganizationUtils;
  
  import java.util.Collection;

  /** PLF-488 : */
  import org.exoplatform.web.application.JavascriptManager;
  import org.gatein.common.text.EntityEncoder;
  def groupNavigations = uicomponent.getGroupNavigations();
  /** FIN */


  def rcontext = _ctx.getRequestContext();
  def jsManager = rcontext.getJavascriptManager();
  jsManager.importJavascript('eXo.portal.UIPortalNavigation');
  jsManager.importJavascript('eXo.portal.UIAdminToolbar');
  jsManager.addCustomizedOnLoadScript('eXo.portal.UIAdminToolbar.onLoad("' + uicomponent.id + '");');
  def portalURI = Util.getPortalRequestContext().getPortalURI();
  def spacesLink = portalURI + "spaces";
  def findSpacesLink = portalURI + "publicSpace";
  boolean hasPermission = uicomponent.hasPermission();

  void renderPageNode(UserNode node, boolean flag) {
    if(!node.getVisibility().equals(Visibility.DISPLAYED)) {
      return;
    }
    UserNode selectedNode = uicomponent.getSelectedPageNode();
    def tabStyleNavigation = "";
    if(selectedNode != null && node.getURI() == selectedNode.getURI()) {
      tabStyleNavigation = "SelectedItem";
    }
    def hasChild = node.getChildrenCount() > 0;
    def clazz = "";
    if(hasChild) clazz = "ArrowIcon";
    def href = Util.getPortalRequestContext().getPortalURI() + node.getURI();
    def icon = node.getIcon();
    if(icon == null) icon = "DefaultPageIcon";
    def toolong = (node.resolvedLabel.length() > 60);
    def label = (toolong ? node.resolvedLabel.substring(0, 57) + "..." : node.resolvedLabel);
    def title = "";
    if(toolong == true) {
      title = "title='$node.resolvedLabel'";
    } else {
      title = "";
    }
    print """
      <div class="MenuItem $tabStyleNavigation">
        <div class="$clazz">
    """;
    if(node.pageRef != null) {
      print """<a class="ItemIcon $icon" href="$href" $title>$label</a>""";
    } else {
      print """<a class="ItemIcon $icon" href="#" $title>$label</a>""";
    }
    print """
        </div>
    """;
    if(hasChild) {
      print """
        <div class="MenuItemContainer" style="position: absolute; display:none">
          <div class="SubBlock">
      """;
		int j = 0;
        for(UserNode childNode : node.getChildren()) {
          /** PLF-971 : we do not separate between group and space navigation, these navigations are rendered in the same level
          /* this test is no more needed
          */
          //def isRender = uicomponent.isRender(node, childNode);
          //if (isRender) 
          renderPageNode(childNode, j++ %2 == 0);
        }
      print """
          </div>
        </div>
      """;
    }
    print """
      </div>
    """;
  }

	/** PLF-488 : construction de la navigation exoadmin:UserToolbarGroupPortlet dans la nouvelle portlet UIMySpace*/

	  void renderGroupPageNavigation(UserNavigation navigation) {
			def nodes = uicomponent.getUserNodes(navigation);
			if(nodes.isEmpty()) return ;
			def ownerId = navigation.getKey().getName();
			String navTitle = _ctx.appRes("UIPageNavigation.label.titleBar") ;
			navTitle = navTitle.replace("{0}", OrganizationUtils.getGroupLabel(ownerId));
            String spacesNavigations= navigation.getKey().getName();
            if(spacesNavigations.indexOf("spaces") > 0) {
                        print """
                        <div class="SubBlock">
                            """ ;
                            int idx =0;
                            for(UserNode node : nodes) {
                                renderPageNodeGroup(node, idx++ %2 == 0 ) ;
                            }
                            print """
                        </div>
            """ ;
                    }
                    else {
            print """
                        <div class="TitleBar"><div style="width: 99%" title="$ownerId">$navTitle</div></div>
                        <div class="SubBlock">
                            """ ;
                            int idx = 0;
                            for(UserNode node : nodes) {
								renderPageNodeGroup(node, idx++ %2 == 0 ) ;
                            }
                            print """
                        </div>
            """ ;
            }
    }
	void renderPageNodeGroup(UserNode node, boolean flag) {
	    if(!node.getVisibility().equals(Visibility.DISPLAYED)) {
	      return;
	    }
		UserNode selectedNode = uicomponent.getSelectedNode();
		String tabStyleNavigation = "";
		if(selectedNode != null && node.getURI() == selectedNode.getURI()) {
				tabStyleNavigation = "SelectedItem";
		}
		boolean hasChild = node.getChildrenCount() > 0;
		String clazz = "";
		if(hasChild) clazz = "ArrowIcon";
		String	href = Util.getPortalRequestContext().getPortalURI() + node.getURI();

		String icon = node.getIcon();
		if(icon == null) icon = "DefaultPageIcon";
		boolean toolong = (node.resolvedLabel.length() > 60);
		String label = ( toolong ? node.resolvedLabel.substring(0, 57) + "..." : node.resolvedLabel);
		String title = "";
		if(toolong) title = "title='$node.resolvedLabel'";
		else title = "";
        EntityEncoder entityEncoder = EntityEncoder.FULL;
		label = entityEncoder.encode(label);
		print """
			<div class="MenuItem $tabStyleNavigation">
				<div class="$clazz">
		""";
						if(node.pageRef != null) {
								print """<a class="ItemIcon $icon" href="$href" $title>$label</a>""";

						} else {
								print """<a class="ItemIcon $icon" href="#" $title>$label</a>""";
						}
		print """
				</div>
		""" ;
		if(hasChild) {
			print """
				<div class="MenuItemContainer" style="position: absolute; display:none">
					<div class="SubBlock">
			""" ;
				int idx = 0;
				for(UserNode child : node.getChildren()) {
		            if(!node.getVisibility().equals(Visibility.DISPLAYED)) {
		              continue;
		            }
					renderPageNode(child, idx++ % 2 == 0);
				}
			print """
					</div>
				</div>
			""" ;

		}
		print """
			</div>
		""" ;
	}

	/** FIN */

%>
<div class="UIUserToolBarGroupPortlet" id="$uicomponent.id" >
  <div class="UIHorizontalTabs">
    <div class="TabsContainer">
      <div class="UITab NormalToolbarTab">
        <div class="">
		<%
			if (uicomponent.renderSpacesLink()) {
		%>
			  <a class="EditorIcon TBIcon" href="<%= spacesLink %>">
		
		        <%                } 
				else            {
				%>
				<a class="EditorIcon TBIcon" href="#">
				 <%            }
                 %>
				<!--
				/** _ctx.appRes("UISpacesToolBarPortlet.label.Spaces") **/
				/** _ctx.appRes("UIMySpacesToolBarPortlet.label.myspaces")**/
				-->
				 <%=_ctx.appRes("UIMySpacePlatformToolBarPortlet.label")%>
			  </a>
		</div>

	  <!-- Merge exoadmin:  navigation-->

		<% 
		if (!groupNavigations.isEmpty()) { %>

			<div style="display:none" class="MenuItemContainer">
				<% 
				def MY_SPACES_MAX_NUMBER = 10;
				def mySpacesDisplayed = 0;
				for(navigation in groupNavigations) {
					if (navigation.getKey().getName().indexOf("spaces")<0 || mySpacesDisplayed == -1){  
						break;
					}
					if(mySpacesDisplayed < MY_SPACES_MAX_NUMBER){
						mySpacesDisplayed += 1;
						renderGroupPageNavigation(navigation);
					}else{
						mySpacesDisplayed = -1;
						def moreSpacesLabel = _ctx.appRes("UIMySpacePlatformToolBarPortlet.more");
						def moreSpacesLink = Util.getPortalRequestContext().getPortalURI() + "spaces" ;
						print """
						<div class="SubBlock">
							<div class="MenuItem">
								""" ;
								if (uicomponent.renderSpacesLink()){
								print """
								<a href="$moreSpacesLink">$moreSpacesLabel</a>
								""" ;
								}else{
								print """
								<a href="#">$moreSpacesLabel</a>
								""" ;
								}
								print """
							</div>
						</div>
						""" ;
					}
				} %>

				<% 
				for(navigation in groupNavigations) {
					if (navigation.getKey().getName().indexOf("spaces")<0){
						renderGroupPageNavigation(navigation);
					}
				}
				%>
			
				<% if (uicomponent.renderSpacesLink()) { %>
					<div class="TitleBar">
						<div style="width: 99%" title="<%=_ctx.appRes("UIMySpacePlatformToolBarPortlet.edit")%>"><%=_ctx.appRes("UIMySpacePlatformToolBarPortlet.edit")%></div>
					</div>
					<div class="SubBlock">
						   
								<div class="MenuItem">   
									<a class="FindPeopleIcon" href="<%= findSpacesLink %>"><%=_ctx.appRes("UIMySpacePlatformToolBarPortlet.find")%></a>
								</div>               
					 </div>
				<% } %>
			</div>
		<% } %>
	   <!-- FIN -->

      </div>
    </div>
  </div>
</div>
