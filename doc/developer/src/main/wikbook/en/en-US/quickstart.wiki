
This guide is to help developers perform their projects with eXo Platform successfully. It introduces eXo architecture and give steps to make your own custom projects with it.

This guide is primarily designed for developers who need to build a custom portal based on eXo Platform.

{note}This document is not a full reference; however, most common tasks that are helpful to developers when they work with eXo are covered.
The full reference is available in the delivery package and is linked rather than replicated here.{note}


*Requirements:*
* JDK (Java Development Kit) 6.0 
* SVN 1.6+
* Maven 2.2.1+
* Tomcat 6.0.26 or JBoss 5.1.0

*Environment:*

Add a system environment variable MAVEN_OPTS (it could be in a .profile startup script on Linux/MacOS operating systems or in global environment variables panel on Windows).

* Windows:
{code}
set MAVEN_OPTS=-Xshare:auto -Xms128M -Xmx1G -XX:MaxPermSize=256M
{code}
* Linux/MacOS:
{code}
export MAVEN_OPTS="-Xshare:auto -Xms128M -Xmx1G -XX:MaxPermSize=256M"
{code}


*Maven settings:*

Save the file {{settings.xml}} in {{HOME/.m2/settings.xml}}
http://wiki.exoplatform.org/xwiki/bin/download/Main/Building%20from%20sources/settings.xml

Edit and change the {{local-properties}} profile:
* {{exo.projects.directory.dependencies}} contains the application servers, and openfire
* each {{exo.projects.app.AS-NAME.version}} contains the name and version of the application servers

Note: If you have an existing file settings.xml, you can merge them all together. You'll need at least
- the local-properties profile to define properties used to build application servers distributions of our products 
- the repository [http://repository.exoplatform.org/public] to download our dependencies


