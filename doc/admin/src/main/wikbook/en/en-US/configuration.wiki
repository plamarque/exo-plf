


h1. Principles of Configuration

System configuration for eXo Platform is stored in a file named {{configuration.properties}}.
The location of this file varies, depending on the application server:
* default bundle: {{$TOMCAT_HOME/gatein/conf/configuration.properties}}
* JBoss : {{$JBOSS_HOME/server/default/conf/configuration.properties}}

h1. Database Configuration

eXo Platform relies on the application server for its database access, so the database must be configured as a datasource at the AS level. 
That datasource is obtained by accessing the enterprise naming context (ENC) through the Java Naming and Directory Interface (JNDI) service.

By default, eXo Platform defines two datasources: 
* {{exo-jcr}} - for the Java Content Repository (JCR).
* {{exo-idm}} - for the organizational model.

The tomcat bundle comes with the two datasources preconfigured as GlobalNamingContext Resources.

Please refer to http://tomcat.apache.org/tomcat-6.0-doc/jndi-resources-howto.html for more details on JNDI resources binding in Tomcat.


The configuration lives in 3 files :
{screen}$TOMCAT_HOME/conf/server.xml{screen} :

We declare the binding of datasources in the Global Naming Context : 
{code:language=xml}
   <!-- eXo JCR Datasource for portal -->
   <Resource name="exo-jcr_portal" auth="Container" type="javax.sql.DataSource"
               maxActive="20" maxIdle="10" maxWait="10000"
               username="sa" password="" driverClassName="org.hsqldb.jdbcDriver"
               url="jdbc:hsqldb:file:../gatein/data/portal/exo-jcr"/>

    <!-- eXo IDM Datasource for portal -->                
    <Resource name="jdbc/exo-idm_portal" auth="Container" type="javax.sql.DataSource"
               maxActive="20" maxIdle="10" maxWait="10000"
               username="sa" password="" driverClassName="org.hsqldb.jdbcDriver"
               url="jdbc:hsqldb:file:../gatein/data/portal/exo-idm"/>   
{code}               
               
{screen}$TOMCAT_HOME/conf/Catalina/localhost/starter.xml{screen} :
 
{code:language=xml}
   <ResourceLink name="exo-jcr_portal"
                global="exo-jcr_portal"
                type="javax.sql.DataSource"/>        
                
    <ResourceLink name="exo-idm_portal"
                global="exo-idm_portal"
                type="javax.sql.DataSource"/>      
{code}                  
 
 We declare resource links that make our datasources accessible to the starter webapp which is used when starting eXo.
 
{screen}$TOMCAT_HOME/gatein/conf/configuration{screen} :         
{code}
# JNDI name of the datasource that will be used by eXo JCR
gatein.jcr.datasource.name=java:/comp/env/exojcr
...
# JNDI Name of the IDM datasource
gatein.idm.datasource.name=java:/comp/env/exo-idm
{code}               

{note}
Note the name expected here is the prefix of the datasource. eXo will automatically append the portal container name ("_portal" by default).
{note}


h1. FileSystem pathes

{note} TODO :
http://jira.exoplatform.org/browse/PLF-544
 must reduce the list of pathes to configure to this :
gatein.data.dir=../gatein/data
gatein.jcr.data.dir=${gatein.data.dir}/jcr
gatein.jcr.storage.data.dir=${gatein.jcr.data.dir}/values
gatein.jcr.index.data.dir=${gatein.jcr.data.dir}/lucene
{note}

h1. Mail Server

h1. WebDAV Cache Control

The embedded WebDAV server lets you control the cache-control http header that it transmits to clients by mimetype.
This is useful for fine-tuning your website.

The configuration property is: {{exo.webdav.cache-control}}
{screen}
exo.webdav.cache-control=text/*:max-age=3600;image/*:max-age=1800;*/*:no-cache;
{screen}

The property expects a comma-separated list of key=pair values, where keys are a list of mimetypes followed by the cache-control value to set.

h1. Chat Server

h2. Chat server configuration

{note}TODO: from http://wiki.exoplatform.org/xwiki/bin/view/CS/Chat%20Configuration explain how to change the hostname and port{note}

h2. XMPPMessenger

If you changed the hostname and port for the chat server, then you'll need to edit two properties:

{screen}
# IP or hostname for the eXo Chat XMPP server
exo.chat.server=127.0.0.1

# TCP port for where the eXo Chat server listens for XMPP calls
exo.chat.port=5222
{screen}
