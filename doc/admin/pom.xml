<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.exoplatform.platform</groupId>
    <artifactId>exo.platform.doc</artifactId>
    <version>3.5.0-CR1-SNAPSHOT</version>
  </parent>
  <artifactId>exo.platform.doc.admin</artifactId>
  <packaging>pom</packaging>
  <name>eXo Platform - Administrator Guide</name>

  <profiles>
    <profile>
      <id>distrib</id>
      <properties>
        <wikbook.source>${project.basedir}/src/main/resources/wikbook-src</wikbook.source>
        <docbook.source>${project.build.directory}/docbook-src</docbook.source>
      </properties>

      <dependencies>
        <dependency>
          <groupId>org.wikbook</groupId>
          <artifactId>wikbook.docbkxstyle</artifactId>
          <version>${version.wikbook.plugin}</version>
        </dependency>
	    <dependency>
          <groupId>org.exoplatform.doc</groupId>
          <artifactId>doc-style</artifactId>
          <version>1.0-SNAPSHOT</version>
          <type>jar</type>
	    </dependency>
      </dependencies>

      <build>
        <plugins>
          <!-- 
           1)  Unpacks the docbook and common style resources
          -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>a-unpack</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.wikbook</groupId>
                      <artifactId>wikbook.docbkxstyle</artifactId>
                      <version>${wikbook.version}</version>
                      <outputDirectory>${docbook.source}</outputDirectory>
                      <includes>**</includes>
                      <excludes>META-INF/**</excludes>
                    </artifactItem>
                    <artifactItem>
                      <groupId>org.exoplatform.doc</groupId>
                      <artifactId>doc-style</artifactId>
                      <version>1.0-SNAPSHOT</version>
                      <outputDirectory>${docbook.source}</outputDirectory>
                      <includes>**</includes>
                      <excludes>META-INF/**</excludes>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!--
           2) move the xml, xsl, css and images from src/main/ to target/plf/
          -->
          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <version>2.4.3</version>
            <executions>
              <execution>
                <id>b-copy-resources</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${project.build.directory}/</outputDirectory>
                  <resources>
                    <resource>
                      <directory>src/main/resources</directory>
                      <excludes>
                       <exclude>images/**</exclude>
                      </excludes>
                    </resource>
                  </resources>
                </configuration>
              </execution>
              <execution>
                <id>c-copy-images</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${docbook.source}/images</outputDirectory>
                  <resources>
                    <resource>
                      <directory>src/main/resources/images</directory>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!--
           3)  The wikbook maven plugin generates the docbook document from the wiki source 
          -->
          <plugin>
            <groupId>org.wikbook</groupId>
            <artifactId>wikbook.maven</artifactId>
            <executions>
              <execution>
                <id>d-generate-docbook</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>transform</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <sourceDirectory>${wikbook.source}</sourceDirectory>
              <sourceFileName>book.wiki</sourceFileName>
              <destinationDirectory>${docbook.source}</destinationDirectory>
              <destinationFileName>index.xml</destinationFileName>
              <emitDoctype>true</emitDoctype>
              <beforeBookBodyXML><![CDATA[
              <xi:include href="bookinfo.xml" xmlns:xi="http://www.w3.org/2001/XInclude" />
           ]]></beforeBookBodyXML>
              <syntaxId>confluence/1.0</syntaxId>
            </configuration>
          </plugin>
           <!--
           4) process all the xml files
              to generate the html and the pdf
            -->
         <plugin>
            <groupId>org.jboss.maven.plugins</groupId>
            <artifactId>maven-jdocbook-plugin</artifactId>
            <version>2.1.1</version>
            <extensions>true</extensions>
            <dependencies>
               <dependency>
                  <groupId>org.exoplatform.doc</groupId>
                  <artifactId>exo-docbook-xslt</artifactId>
                  <version>1</version>
               </dependency>
               <dependency>
                  <groupId>org.exoplatform.doc</groupId>
                  <artifactId>exo-jdocbook-style</artifactId>
                  <version>1</version>
                  <type>jdocbook-style</type>
               </dependency>
            </dependencies>
            <executions>
             <execution>
                <id>e-jdocbook-resources</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>resources</goal>
                </goals>
              </execution>
             <execution>
               <id>f-generate-docs</id>
               <goals>
                 <goal>generate</goal>
               </goals>
               <phase>compile</phase>
               </execution>
             </executions>
		        <configuration>
                   <sourceDirectory>${docbook.source}</sourceDirectory>
		           <sourceDocumentName>index.xml</sourceDocumentName>
		           <imageResource>
		              <directory>${docbook.source}</directory>
		              <includes>
		                 <include>images/**</include>
		                 <include>background/**</include>
		              </includes>
		           </imageResource>
		            <cssResource>
		              <directory>${docbook.source}</directory>
		              <includes>
		                 <include>css/**</include>
		              </includes>
		           </cssResource>
		           <formats>
		              <format>
		                 <formatName>html_single</formatName>
		                 <stylesheetResource>file:${docbook.source}/xsl/xhtml-single.xsl</stylesheetResource>
		                 <finalName>index.html</finalName>
		              </format>
                      <format>
		                <formatName>html</formatName>
		                <stylesheetResource>file:${docbook.source}/xsl/xhtml.xsl</stylesheetResource>
		                <finalName>index.html</finalName>
		              </format>
		              <!--format>
                        <formatName>eclipse</formatName>
                        <stylesheetResource>file:${docbook.source}/xsl/eclipse30.xsl</stylesheetResource>
                        <finalName>index.html</finalName>
                      </format-->
		           </formats>
		           <options>
		              <xincludeSupported>true</xincludeSupported>
		              <xmlTransformerType>saxon</xmlTransformerType>
		              <docbookVersion>1.76.1</docbookVersion>
		           </options>
		        </configuration>
         </plugin>
           <!--
            5) this step is necessary to circumvent a bug in the pdf-generator, cf PLF-802 
           -->
         <plugin>
           <artifactId>maven-antrun-plugin</artifactId>
           <version>1.6</version>
           <executions>
             <execution>
               <id>g-remove-border-collapse</id>
               <phase>compile</phase>
               <configuration>
                 <target>
                   <replace file="${project.build.directory}/docbook/publish/en-US/html_single/css/exo.css">
    				  <replacetoken><![CDATA[border-collapse: collapse;]]></replacetoken>
	    			  <replacevalue><![CDATA[/*border-collapse: collapse;*/]]></replacevalue>
		    		</replace>
                </target>
               </configuration>
               <goals>
                 <goal>run</goal>
               </goals>
              </execution>
            </executions>
          </plugin>
          <!--
            6) this step is necessary to circumvent a bug in the pdf-generator, cf PLF-802 
           -->
          <plugin>
            <groupId>org.exoplatform.doc</groupId>
            <artifactId>doc-pdf-generator</artifactId>
            <version>1.0-SNAPSHOT</version>
            <executions>
              <execution>
                <id>h-remove-border-collapse</id>
                <phase>compile</phase>
                <goals>
                  <goal>transform</goal>
                </goals>
                <configuration>
                  <inputFile>${project.build.directory}/docbook/publish/en-US/html_single/index.html</inputFile>
                  <outputFile>${project.build.directory}/${project.artifactId}.pdf</outputFile>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!--
            7) assemble the final zip
           -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <dependencies>
            </dependencies>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <descriptors>
                    <descriptor>src/main/assembly/docs-archive.xml</descriptor>
                  </descriptors>
                  <appendAssemblyId>false</appendAssemblyId>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
